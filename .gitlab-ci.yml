image: registry.ritc.jp/ricos/machine_learning/siml:0.2.7

default:
  before_script:
    - poetry config virtualenvs.create false
    - poetry config repositories.ricos https://pypi.ritc.jp
    - poetry config http-basic.ricos ricos ${RICOS_PYPI_KEY}
    - poetry build
    - python3.7 -m pip install -U femio --pre --index=https://pypi.ritc.jp
    - python3.7 -m pip install dist/pysiml-*.whl  # Only install root project, not dependencies
    # - poetry install

stages:
  - docker
  - preprocess
  - test
  - deploy
  - commit

# docker:
#   image: docker:latest
#   stage: docker
#   inherit:
#     default: false
#   services:
#     - docker:dind
#   script:
#     - apk add make
#     - cd docker && make push key=${RICOS_PYPI_KEY}
#   tags:
#     - docker
#     - gpu
#   only:
#     - master

preprocess:
  stage: preprocess
  script: python3.7 tests/preprocess.py
  artifacts:
    paths:
      - tests/data/deform/interim
      - tests/data/deform/preprocessed
      - tests/data/deform_timeseries/preprocessed
      - tests/data/rotation/preprocessed
      - tests/data/large/preprocessed
      - tests/data/ode/interim
      - tests/data/ode/preprocessed
      - tests/data/ode/preprocessed
      - tests/data/rotation_thermal_stress/preprocessed
      - tests/data/rotation_thermal_stress/interim/cube/original
      - tests/data/heat_time_series/preprocessed
    expire_in: 60min

autopep8:
  stage: preprocess
  script:
    - python3.7 -m autopep8 --diff --exit-code $(find siml tests -name "*.py")
  allow_failure: true

pages:
  stage: deploy
  script:
    - poetry run sphinx-apidoc -f -o ./sphinx siml
    - poetry run sphinx-build ./sphinx ./docs
    - cp -r docs public
    - poetry build
    - mv dist/*.whl public/
  artifacts:
    paths:
      - public
      - docs
  only:
    - master
    - develop

.test:
  stage: test
  tags:
    - avx

test_gpu_networks:
  extends: .test
  script:
    - python3.7 -m pytest tests/gpu/test_networks_gpu.py --capture=no
  tags:
    - multi-gpu
    - avx

test_gpu:
  extends: .test
  script:
    - python3.7 -m pytest tests/gpu/test_optimize_gpu.py tests/gpu/test_trainer_gpu.py --capture=no
  tags:
    - multi-gpu
    - avx

test_gpu_parallel:
  extends: .test
  script:
    - python3.7 -m pytest tests/gpu/test_trainer_gpu_parallel.py --capture=no
  allow_failure: true
  tags:
    - multi-gpu
    - avx

test_networks:
  extends: .test
  script: python3.7 -m pytest tests/test_networks.py --capture=no

test_geo:
  extends: .test
  script: python3.7 -m pytest tests/test_geo.py --capture=no

test_iso_gcn:
  extends: .test
  script: python3.7 -m pytest tests/test_iso_gcn.py --capture=no

test_optimize:
  extends: .test
  script: python3.7 -m pytest tests/test_optimize.py --capture=no

test_study:
  extends: .test
  script: python3.7 -m pytest tests/test_study.py --capture=no

test_trainer:
  extends: .test
  script: python3.7 -m pytest tests/test_trainer.py --capture=no

test_trainer_wo_pyg:
  extends: .test
  script:
    - python3.7 -m pip uninstall torch-geometric -y
    - python3.7 -m pytest tests/test_trainer.py --capture=no -k test_whole_process

test_trainer_long:
  extends: .test
  script: python3.7 -m pytest tests/test_trainer_long.py --capture=no

test_other:
  extends: .test
  script:
    - python3.7 -m pytest tests/test_prepost.py tests/test_setting.py tests/test_util.py tests/test_inferer.py --capture=no

.deploy:wheel:
  stage: deploy
  script:
    - python3.7 -m pip install --upgrade pip
    - poetry version $VERSION
    - poetry config repositories.ricos https://pypi.ritc.jp
    - poetry build -f wheel
    - poetry publish --username ricos --password ${RICOS_PYPI_KEY} -r ricos --no-ansi -n -v
    - poetry publish --username __token__ --password ${PYPI_ORG_TOKEN} --no-ansi -n -v
  retry: 2

deploy:wheel:master:
  extends: .deploy:wheel
  before_script:
    - export VERSION=$(grep "^version" pyproject.toml | grep -o "[0-9]\.[0-9]\.[0-9]").dev$(date +"%Y%m%d%H%M")
  only:
    - master
    - develop

deploy:wheel:tag:
  extends: .deploy:wheel
  before_script:
    - export VERSION=$CI_COMMIT_REF_NAME
  only:
    - tags

commit:
  stage: commit
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H "$CI_SERVER_HOST" >> ~/.ssh/known_hosts
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | ssh-add - > /dev/null
    - git config --global user.name "runner@gitlab.ritc.jp"
    - git config --global user.email "runner@gitlab.ritc.jp"
    - git remote set-url --push origin git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git
    - git add docs
    - git commit -m '[ci skip] push document by GitLab runner'
    - git push origin --force HEAD:gh-pages
  only:
    - master

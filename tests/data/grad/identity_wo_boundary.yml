data:
  raw: tests/data/grad/raw
  interim: tests/data/grad/interim
  preprocessed: tests/data/grad/preprocessed
  inferred: tests/data/grad/inferred
  train:
    - tests/data/grad/preprocessed/train
  validation:
    - tests/data/grad/preprocessed/validation
  test:
    - tests/data/grad/preprocessed/test
conversion:
  file_type: 'ucd'
  required_file_names:
    - '*.inp'
inferer:
  write_simulation_type: ucd
  read_simulation_type: ucd

trainer:
  output_directory: tests/data/grad/identity_wo_boundary
  inputs:
    rank0:
      - name: phi
        dim: 1
  support_inputs:
    - nodal_grad_x
    - nodal_grad_y
    - nodal_grad_z
  outputs:
    - name: grad
      dim: 1
  prune: false
  n_epoch: 1000
  log_trigger_epoch: 10
  stop_trigger_epoch: 10
  seed: 0
  lazy: false
  batch_size: 4
  num_workers: 0

model:
  blocks:
    # Encoder
    - name: IN_MLP
      type: mlp
      is_first: true
      bias: false
      input_keys:
        - rank0
      destinations:
        - ISOGCN_1
      nodes:
        - -1
        - 1
      activations:
        - identity

    # Processor 1
    - name: ISOGCN_1
      type: iso_gcn
      bias: false
      destinations:
        - OUT_MLP
      nodes:
        - -1
        - 1
      activations:
        - identity
      support_input_indices:
        - 0
        - 1
        - 2
      optional:
        propagations:
          - convolution
        create_subchain: false

    # Decoder
    - name: OUT_MLP
      type: identity
